[
  {
    "type": "impl",
    "name": "l0KMaster",
    "interface_name": "l0kswap::Il0KMaster"
  },
  {
    "type": "struct",
    "name": "core::integer::u256",
    "members": [
      {
        "name": "low",
        "type": "core::integer::u128"
      },
      {
        "name": "high",
        "type": "core::integer::u128"
      }
    ]
  },
  {
    "type": "struct",
    "name": "l0kswap::PoolInfo",
    "members": [
      {
        "name": "lp_token",
        "type": "core::starknet::contract_address::ContractAddress"
      },
      {
        "name": "alloc_points",
        "type": "core::integer::u256"
      },
      {
        "name": "last_reward_time",
        "type": "core::integer::u64"
      },
      {
        "name": "acc_reward_per_share",
        "type": "core::integer::u256"
      },
      {
        "name": "lp_tokens",
        "type": "core::integer::u256"
      }
    ]
  },
  {
    "type": "struct",
    "name": "l0kswap::UserInfo",
    "members": [
      {
        "name": "amount",
        "type": "core::integer::u256"
      },
      {
        "name": "reward_debt",
        "type": "core::integer::u256"
      }
    ]
  },
  {
    "type": "enum",
    "name": "core::bool",
    "variants": [
      {
        "name": "False",
        "type": "()"
      },
      {
        "name": "True",
        "type": "()"
      }
    ]
  },
  {
    "type": "interface",
    "name": "l0kswap::Il0KMaster",
    "items": [
      {
        "type": "function",
        "name": "initialize",
        "inputs": [
          {
            "name": "max_rewards",
            "type": "core::integer::u256"
          },
          {
            "name": "reward_per_sec",
            "type": "core::integer::u256"
          },
          {
            "name": "start_time",
            "type": "core::integer::u64"
          },
          {
            "name": "bonus_end_time",
            "type": "core::integer::u64"
          },
          {
            "name": "reward_token",
            "type": "core::starknet::contract_address::ContractAddress"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "type": "function",
        "name": "reward_token",
        "inputs": [],
        "outputs": [
          {
            "type": "core::starknet::contract_address::ContractAddress"
          }
        ],
        "state_mutability": "view"
      },
      {
        "type": "function",
        "name": "reward_per_sec",
        "inputs": [],
        "outputs": [
          {
            "type": "core::integer::u256"
          }
        ],
        "state_mutability": "view"
      },
      {
        "type": "function",
        "name": "max_rewards",
        "inputs": [],
        "outputs": [
          {
            "type": "core::integer::u256"
          }
        ],
        "state_mutability": "view"
      },
      {
        "type": "function",
        "name": "start_time",
        "inputs": [],
        "outputs": [
          {
            "type": "core::integer::u64"
          }
        ],
        "state_mutability": "view"
      },
      {
        "type": "function",
        "name": "bonus_end_time",
        "inputs": [],
        "outputs": [
          {
            "type": "core::integer::u64"
          }
        ],
        "state_mutability": "view"
      },
      {
        "type": "function",
        "name": "end_time",
        "inputs": [],
        "outputs": [
          {
            "type": "core::integer::u256"
          }
        ],
        "state_mutability": "view"
      },
      {
        "type": "function",
        "name": "total_rewards",
        "inputs": [],
        "outputs": [
          {
            "type": "core::integer::u256"
          }
        ],
        "state_mutability": "view"
      },
      {
        "type": "function",
        "name": "pool_info",
        "inputs": [
          {
            "name": "pid",
            "type": "core::integer::u256"
          }
        ],
        "outputs": [
          {
            "type": "l0kswap::PoolInfo"
          }
        ],
        "state_mutability": "view"
      },
      {
        "type": "function",
        "name": "pool_length",
        "inputs": [],
        "outputs": [
          {
            "type": "core::integer::u256"
          }
        ],
        "state_mutability": "view"
      },
      {
        "type": "function",
        "name": "user_info",
        "inputs": [
          {
            "name": "pid",
            "type": "core::integer::u256"
          },
          {
            "name": "user",
            "type": "core::starknet::contract_address::ContractAddress"
          }
        ],
        "outputs": [
          {
            "type": "l0kswap::UserInfo"
          }
        ],
        "state_mutability": "view"
      },
      {
        "type": "function",
        "name": "pool_ids",
        "inputs": [
          {
            "name": "pool",
            "type": "core::starknet::contract_address::ContractAddress"
          }
        ],
        "outputs": [
          {
            "type": "core::integer::u256"
          }
        ],
        "state_mutability": "view"
      },
      {
        "type": "function",
        "name": "is_pool",
        "inputs": [
          {
            "name": "pool",
            "type": "core::starknet::contract_address::ContractAddress"
          }
        ],
        "outputs": [
          {
            "type": "core::bool"
          }
        ],
        "state_mutability": "view"
      },
      {
        "type": "function",
        "name": "total_alloc_points",
        "inputs": [],
        "outputs": [
          {
            "type": "core::integer::u256"
          }
        ],
        "state_mutability": "view"
      },
      {
        "type": "function",
        "name": "has_closed",
        "inputs": [],
        "outputs": [
          {
            "type": "core::bool"
          }
        ],
        "state_mutability": "view"
      },
      {
        "type": "function",
        "name": "pending_rewards",
        "inputs": [
          {
            "name": "pid",
            "type": "core::integer::u256"
          },
          {
            "name": "_user",
            "type": "core::starknet::contract_address::ContractAddress"
          }
        ],
        "outputs": [
          {
            "type": "core::integer::u256"
          }
        ],
        "state_mutability": "view"
      },
      {
        "type": "function",
        "name": "get_multiplier",
        "inputs": [
          {
            "name": "_from",
            "type": "core::integer::u64"
          },
          {
            "name": "_to",
            "type": "core::integer::u64"
          }
        ],
        "outputs": [
          {
            "type": "core::integer::u64"
          }
        ],
        "state_mutability": "view"
      },
      {
        "type": "function",
        "name": "add_pool",
        "inputs": [
          {
            "name": "lp_token",
            "type": "core::starknet::contract_address::ContractAddress"
          },
          {
            "name": "alloc_points",
            "type": "core::integer::u256"
          },
          {
            "name": "with_update",
            "type": "core::bool"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "type": "function",
        "name": "set_pool",
        "inputs": [
          {
            "name": "pid",
            "type": "core::integer::u256"
          },
          {
            "name": "alloc_points",
            "type": "core::integer::u256"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "type": "function",
        "name": "mass_update_pools",
        "inputs": [],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "type": "function",
        "name": "deposit",
        "inputs": [
          {
            "name": "pid",
            "type": "core::integer::u256"
          },
          {
            "name": "amount",
            "type": "core::integer::u256"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "type": "function",
        "name": "withdraw",
        "inputs": [
          {
            "name": "pid",
            "type": "core::integer::u256"
          },
          {
            "name": "amount",
            "type": "core::integer::u256"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "type": "function",
        "name": "emergency_withdraw",
        "inputs": [
          {
            "name": "pid",
            "type": "core::integer::u256"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "type": "function",
        "name": "claim_fees_for",
        "inputs": [
          {
            "name": "pid",
            "type": "core::integer::u256"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "type": "function",
        "name": "claim_fees",
        "inputs": [],
        "outputs": [],
        "state_mutability": "external"
      }
    ]
  },
  {
    "type": "impl",
    "name": "OwnableImpl",
    "interface_name": "openzeppelin::access::ownable::interface::IOwnable"
  },
  {
    "type": "interface",
    "name": "openzeppelin::access::ownable::interface::IOwnable",
    "items": [
      {
        "type": "function",
        "name": "owner",
        "inputs": [],
        "outputs": [
          {
            "type": "core::starknet::contract_address::ContractAddress"
          }
        ],
        "state_mutability": "view"
      },
      {
        "type": "function",
        "name": "transfer_ownership",
        "inputs": [
          {
            "name": "new_owner",
            "type": "core::starknet::contract_address::ContractAddress"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "type": "function",
        "name": "renounce_ownership",
        "inputs": [],
        "outputs": [],
        "state_mutability": "external"
      }
    ]
  },
  {
    "type": "impl",
    "name": "OwnableCamelOnlyImpl",
    "interface_name": "openzeppelin::access::ownable::interface::IOwnableCamelOnly"
  },
  {
    "type": "interface",
    "name": "openzeppelin::access::ownable::interface::IOwnableCamelOnly",
    "items": [
      {
        "type": "function",
        "name": "transferOwnership",
        "inputs": [
          {
            "name": "newOwner",
            "type": "core::starknet::contract_address::ContractAddress"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "type": "function",
        "name": "renounceOwnership",
        "inputs": [],
        "outputs": [],
        "state_mutability": "external"
      }
    ]
  },
  {
    "type": "constructor",
    "name": "constructor",
    "inputs": [
      {
        "name": "owner",
        "type": "core::starknet::contract_address::ContractAddress"
      }
    ]
  },
  {
    "type": "event",
    "name": "openzeppelin::access::ownable::ownable::OwnableComponent::OwnershipTransferred",
    "kind": "struct",
    "members": [
      {
        "name": "previous_owner",
        "type": "core::starknet::contract_address::ContractAddress",
        "kind": "data"
      },
      {
        "name": "new_owner",
        "type": "core::starknet::contract_address::ContractAddress",
        "kind": "data"
      }
    ]
  },
  {
    "type": "event",
    "name": "openzeppelin::access::ownable::ownable::OwnableComponent::Event",
    "kind": "enum",
    "variants": [
      {
        "name": "OwnershipTransferred",
        "type": "openzeppelin::access::ownable::ownable::OwnableComponent::OwnershipTransferred",
        "kind": "nested"
      }
    ]
  },
  {
    "type": "event",
    "name": "openzeppelin::security::reentrancyguard::ReentrancyGuardComponent::Event",
    "kind": "enum",
    "variants": []
  },
  {
    "type": "event",
    "name": "l0kswap::l0KMaster::PoolAdded",
    "kind": "struct",
    "members": [
      {
        "name": "lp_token",
        "type": "core::starknet::contract_address::ContractAddress",
        "kind": "key"
      },
      {
        "name": "alloc_points",
        "type": "core::integer::u256",
        "kind": "data"
      }
    ]
  },
  {
    "type": "event",
    "name": "l0kswap::l0KMaster::PoolSet",
    "kind": "struct",
    "members": [
      {
        "name": "lp_token",
        "type": "core::starknet::contract_address::ContractAddress",
        "kind": "key"
      },
      {
        "name": "alloc_points",
        "type": "core::integer::u256",
        "kind": "data"
      }
    ]
  },
  {
    "type": "event",
    "name": "l0kswap::l0KMaster::Deposit",
    "kind": "struct",
    "members": [
      {
        "name": "user",
        "type": "core::starknet::contract_address::ContractAddress",
        "kind": "key"
      },
      {
        "name": "pid",
        "type": "core::integer::u256",
        "kind": "data"
      },
      {
        "name": "amount",
        "type": "core::integer::u256",
        "kind": "data"
      }
    ]
  },
  {
    "type": "event",
    "name": "l0kswap::l0KMaster::Withdrawal",
    "kind": "struct",
    "members": [
      {
        "name": "user",
        "type": "core::starknet::contract_address::ContractAddress",
        "kind": "key"
      },
      {
        "name": "pid",
        "type": "core::integer::u256",
        "kind": "data"
      },
      {
        "name": "amount",
        "type": "core::integer::u256",
        "kind": "data"
      }
    ]
  },
  {
    "type": "event",
    "name": "l0kswap::l0KMaster::EmergencyWithdrawal",
    "kind": "struct",
    "members": [
      {
        "name": "user",
        "type": "core::starknet::contract_address::ContractAddress",
        "kind": "key"
      },
      {
        "name": "pid",
        "type": "core::integer::u256",
        "kind": "data"
      },
      {
        "name": "amount",
        "type": "core::integer::u256",
        "kind": "data"
      }
    ]
  },
  {
    "type": "event",
    "name": "l0kswap::l0KMaster::Reward",
    "kind": "struct",
    "members": [
      {
        "name": "user",
        "type": "core::starknet::contract_address::ContractAddress",
        "kind": "key"
      },
      {
        "name": "amount",
        "type": "core::integer::u256",
        "kind": "data"
      }
    ]
  },
  {
    "type": "event",
    "name": "l0kswap::l0KMaster::Event",
    "kind": "enum",
    "variants": [
      {
        "name": "OwnableEvent",
        "type": "openzeppelin::access::ownable::ownable::OwnableComponent::Event",
        "kind": "flat"
      },
      {
        "name": "ReentrancyGuardEvent",
        "type": "openzeppelin::security::reentrancyguard::ReentrancyGuardComponent::Event",
        "kind": "flat"
      },
      {
        "name": "PoolAdded",
        "type": "l0kswap::l0KMaster::PoolAdded",
        "kind": "nested"
      },
      {
        "name": "PoolSet",
        "type": "l0kswap::l0KMaster::PoolSet",
        "kind": "nested"
      },
      {
        "name": "Deposit",
        "type": "l0kswap::l0KMaster::Deposit",
        "kind": "nested"
      },
      {
        "name": "Withdrawal",
        "type": "l0kswap::l0KMaster::Withdrawal",
        "kind": "nested"
      },
      {
        "name": "EmergencyWithdrawal",
        "type": "l0kswap::l0KMaster::EmergencyWithdrawal",
        "kind": "nested"
      },
      {
        "name": "Reward",
        "type": "l0kswap::l0KMaster::Reward",
        "kind": "nested"
      }
    ]
  }
]
